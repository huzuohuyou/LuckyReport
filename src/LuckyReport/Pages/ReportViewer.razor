@page "/reports/{id:int}/view"
@inject IJSRuntime Js
@using LuckyReport.Shared
@using Append.Blazor.Printing
@using Append.Blazor.Printing
@inject IPrintingService PrintingService

<div>
    <Filter />
    <Button Type="@ButtonType.Primary" @onclick="Download">下载</Button>
    <Button Type="@ButtonType.Primary" @onclick="Print">打印</Button>
    <button @onclick="@(()=> PrintingService.Print("docs/demo6.pdf"))">
        Print PDF
    </button>
</div>
<Card Style="height: 700px">
    <div id="luckysheetviewer" style="margin:0;padding:0;position:absolute;width:100%;height:100%;left: 0;top: 0;"></div>
</Card>

@code {
    [Parameter]
    public int Id { get; set; }

    public bool Loaded = false;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //var report = await new swaggerClient("https://localhost:7103/", new HttpClient()).GetAsync(id);
        if (firstRender)
        {
            await Js.InvokeVoidAsync("luckyLoad.viewDoc", Id);
        }
        
    }
    private async Task<bool> Print()
    {
        await Js.InvokeAsync<string>("luckyLoad.printDoc");
        return true;
    }
    private async Task<bool> Download()
    {
        //var doc = await Js.InvokeAsync<string>("luckyLoad.getDoc");
        var url = await new swaggerClient("https://localhost:7103/", new HttpClient()).ExcelAsync(Id);
        var fileName = "report.xls";
        //Console.WriteLine(url);
        await Js.InvokeVoidAsync("triggerFileDownload", fileName, url);
        return true;
    }
    
}