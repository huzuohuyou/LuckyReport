@page "/reports/{id:int}/view"
@inject IJSRuntime Js
<Card>
    <h1>Report Viewer @id</h1>
    <Button Type="@ButtonType.Primary" @onclick="Download">下载</Button>
    <Button Type="@ButtonType.Primary" @onclick="Print">打印</Button>
</Card>
<Card Style="height: 700px">
    <div id="luckysheetviewer" style="margin:0px;padding:0px;position:absolute;width:100%;height:100%;left: 0px;top: 0px;"></div>
</Card>

@code {
    [Parameter]
    public int id { get; set; }
   
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //var report = await new swaggerClient("https://localhost:7103/", new HttpClient()).GetAsync(id);
        await Js.InvokeVoidAsync("luckyLoad.viewDoc",id);
    }
    private  void Print()
    {
    //同上先打开excel进程并指定工作表
        Microsoft.Office.Interop.Excel.Application excelapp = new Microsoft.Office.Interop.Excel.Application();
        Microsoft.Office.Interop.Excel.Workbook wb = excelapp.Workbooks.Open(@"D:\Github\luckyReport\src\LuckyReport.Server\wwwroot\UploadFiles\2022-11-24\export_03_28_03.xls");
        Microsoft.Office.Interop.Excel.Worksheet WS = (Microsoft.Office.Interop.Excel.Worksheet)wb.Worksheets[1];

    //使用的是PrintOutEx函数来打印，
        WS.PrintOutEx(1,1,1,false,"Microsoft XPS Document Writer", true, true, "C:/Users/Administrator/Desktop/1.xps");
    }
    private async Task<bool> Download()
    {
        var doc = await Js.InvokeAsync<string>("luckyLoad.getDoc");
        var ok = await new swaggerClient("https://localhost:7103/", new HttpClient()).PostAsync(new Report() { Id = id, Doc = doc });
        return ok;
    }

    private async Task<bool> Save()
    {
        var doc = await Js.InvokeAsync<string>("luckyLoad.getDoc");
        var ok = await new swaggerClient("https://localhost:7103/", new HttpClient()).PostAsync(new Report() { Id = id, Doc = doc });
        return ok;
    }
    
}