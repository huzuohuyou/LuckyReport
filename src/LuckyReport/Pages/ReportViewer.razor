@page "/reports/{id:int}/view"
@inject IJSRuntime Js
<Card>
    <h1>Report Viewer @id</h1>
    <Button Type="@ButtonType.Primary" @onclick="Download">下载</Button>
    <Button Type="@ButtonType.Primary" @onclick="Print">打印</Button>
</Card>
<Card Style="height: 700px">
    <div id="luckysheetviewer" style="margin:0px;padding:0px;position:absolute;width:100%;height:100%;left: 0px;top: 0px;"></div>
</Card>

@code {
    [Parameter]
    public int id { get; set; }

    public bool loaded = false;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //var report = await new swaggerClient("https://localhost:7103/", new HttpClient()).GetAsync(id);
        if (firstRender)
        {
            await Js.InvokeVoidAsync("luckyLoad.viewDoc", id);
        }
        
    }
    private async Task<bool> Print()
    {
        var doc = await Js.InvokeAsync<string>("luckyLoad.printDoc");
        return true;
    }
    private async Task<bool> Download()
    {
        //var doc = await Js.InvokeAsync<string>("luckyLoad.getDoc");
        var url = await new swaggerClient("https://localhost:7103/", new HttpClient()).ExcelAsync(id);
        var fileName = "report.xls";
        //Console.WriteLine(url);
        await Js.InvokeVoidAsync("triggerFileDownload", fileName, url);
        return true;
    }

    private async Task<bool> Save()
    {
        var doc = await Js.InvokeAsync<string>("luckyLoad.getDoc");
        var ok = await new swaggerClient("https://localhost:7103/", new HttpClient()).PostAsync(new Report() { Id = id, Doc = doc });
        return ok;
    }
    
}